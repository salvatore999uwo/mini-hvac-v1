float Read_Temperature(void) {
    HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
    uint32_t adc_value = HAL_ADC_GetValue(&hadc1);

    // Convert ADC value to temperature (assumed linear conversion for simplicity)
    // Adjust the conversion based on your temperature sensor's characteristics
    float temperature = ((float)adc_value / 4095.0) * 100.0;
    return temperature;
}

void Control_Heater(float setpoint, float current_temp) {
    if (current_temp < setpoint) {
        HAL_GPIO_WritePin(HEATER_GPIO_PORT, HEATER_GPIO_PIN, GPIO_PIN_SET);
    } else {
        HAL_GPIO_WritePin(HEATER_GPIO_PORT, HEATER_GPIO_PIN, GPIO_PIN_RESET);
    }
}

void Error_Handler(void) {
    // User can add his own implementation to report the HAL error return state
    while (1) {
    }
}

void SystemClock_Config(void) {
    // System Clock Configuration (adjust as per your MCU clock settings)
    // This is a placeholder for the system clock configuration
}
